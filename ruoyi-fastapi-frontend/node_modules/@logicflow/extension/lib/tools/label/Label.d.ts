import { BaseEdgeModel, BaseNodeModel, Component, GraphModel, IDragParams, StepDrag } from '@logicflow/core';
import LabelModel from './LabelModel';
export interface ILabelProps {
    label: LabelModel;
    element: BaseNodeModel | BaseEdgeModel;
    graphModel: GraphModel;
}
export interface ILabelState {
    isEditing: boolean;
    isHovered: boolean;
    isDragging: boolean;
    isSelected: boolean;
}
export declare class Label extends Component<ILabelProps, ILabelState> {
    textRef: import("preact").RefObject<HTMLDivElement>;
    stepDrag: StepDrag;
    constructor(props: ILabelProps);
    setHoverOn: () => void;
    setHoverOff: () => void;
    handleMouseDown: (e: MouseEvent) => void;
    handleMouseUp: (e: MouseEvent) => void;
    handleDragging: ({ deltaX, deltaY }: IDragParams) => void;
    handleDragEnd: () => void;
    handleClick: (e: MouseEvent) => void;
    handleDbClick: (e: MouseEvent) => void;
    handleBlur: (e: FocusEvent) => void;
    handleInput: (e: InputEvent) => void;
    setElementModelLabelInfo(data: any): void;
    reCalcLabelSize: () => void;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    render(): import("preact").JSX.Element;
}
export default Label;
