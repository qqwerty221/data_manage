import LogicFlow from '@logicflow/core';
import { GroupNode, GroupNodeModel } from '../../../materials/group';
declare class LaneModel extends GroupNodeModel {
    initNodeData(data: LogicFlow.NodeConfig & Record<'width' | 'height', number>): void;
    changeAttribute({ width, height, x, y }: any): void;
}
declare class LaneView extends GroupNode {
    getOperateIcon(): import("preact").VNode<import("preact").ClassAttributes<HTMLElement> & {
        cursor: string;
        onClick: () => void;
    }>[] | null;
    addAboveIcon(): import("preact").VNode<import("preact").ClassAttributes<HTMLElement> & {
        cursor: string;
        onClick: () => void;
    }>;
    addBelowIcon(): import("preact").VNode<import("preact").ClassAttributes<HTMLElement> & {
        cursor: string;
        onClick: () => void;
    }>;
    deleteIcon(): import("preact").VNode<import("preact").ClassAttributes<HTMLElement> & {
        cursor: string;
        onClick: () => void;
    }>;
    getResizeShape(): import("preact").VNode<import("preact").ClassAttributes<HTMLElement>>;
}
declare const LaneNode: {
    type: string;
    view: typeof LaneView;
    model: typeof LaneModel;
};
export default LaneNode;
