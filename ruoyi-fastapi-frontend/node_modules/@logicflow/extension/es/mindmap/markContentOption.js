var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { h, RectNode, RectNodeModel } from '@logicflow/core';
var MarkContentOptionModel = /** @class */ (function (_super) {
    __extends(MarkContentOptionModel, _super);
    function MarkContentOptionModel(data, graphModel) {
        if (!data.text) {
            data.text = {
                x: data.x,
                y: data.y + 15,
                value: '',
            };
        }
        return _super.call(this, data, graphModel) || this;
    }
    MarkContentOptionModel.prototype.setAttributes = function () {
        this.height = 60;
        this.strokeWidth = 1;
    };
    MarkContentOptionModel.extendKey = 'MarkContentOptionModel';
    return MarkContentOptionModel;
}(RectNodeModel));
var MarkContentOptionView = /** @class */ (function (_super) {
    __extends(MarkContentOptionView, _super);
    function MarkContentOptionView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MarkContentOptionView.prototype.getLabelShape = function () {
        var _a = this.props.model, x = _a.x, y = _a.y, width = _a.width, height = _a.height;
        var style = this.props.model.getNodeStyle();
        return h('svg', {
            x: x - width / 2 + 5,
            y: y - height / 2 + 5,
            width: 25,
            height: 25,
            viewBox: '0 0 1274 1024',
        }, h('path', {
            fill: style.stroke,
            d: 'M655.807326 287.35973m-223.989415 0a218.879 218.879 0 1 0 447.978829 0 218.879 218.879 0 1 0-447.978829 0ZM1039.955839 895.482975c-0.490184-212.177424-172.287821-384.030443-384.148513-384.030443-211.862739 0-383.660376 171.85302-384.15056 384.030443L1039.955839 895.482975z',
        }));
    };
    MarkContentOptionView.prototype.getShape = function () {
        var _a = this.props.model, x = _a.x, y = _a.y, width = _a.width, height = _a.height, radius = _a.radius;
        var style = this.props.model.getNodeStyle();
        return h('g', {}, [
            h('rect', __assign(__assign({ x: x - width / 2, y: y - height / 2 }, style), { rx: radius, ry: radius, width: width, height: height })),
            this.getLabelShape(),
            h('text', {
                fill: style.stroke,
                fontSize: 12,
                x: x - width / 2 + 30,
                y: y - height / 2 + 20,
                width: 50,
                height: 25,
            }, '主题内容'),
        ]);
    };
    MarkContentOptionView.extendKey = 'MarkContentOption';
    return MarkContentOptionView;
}(RectNode));
export { MarkContentOptionView };
var MarkContentOption = {
    type: 'mark:content-option',
    view: MarkContentOptionView,
    model: MarkContentOptionModel,
};
export default MarkContentOption;
