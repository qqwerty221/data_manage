import { GraphModel, HtmlNode, HtmlNodeModel } from '@logicflow/core';
import { PCTResizeParams, ResizeNodeConfig } from './RectResize';
export declare class HtmlResizeModel extends HtmlNodeModel {
    PCTResizeInfo?: PCTResizeParams;
    minWidth: number;
    minHeight: number;
    maxWidth: number;
    maxHeight: number;
    constructor(data: ResizeNodeConfig, graphModel: GraphModel);
    initNodeData(data: any): void;
    getOutlineStyle(): import("@logicflow/core").LogicFlow.OutlineTheme;
    getResizeOutlineStyle(): {
        fill: string;
        stroke: string;
        strokeWidth: number;
        strokeDasharray: string;
    };
    getControlPointStyle(): {
        width: number;
        height: number;
        fill: string;
        stroke: string;
    };
    enableProportionResize(turnOn?: boolean): void;
}
export declare class HtmlResizeView extends HtmlNode {
    getControlGroup(): import("preact").JSX.Element;
    getResizeShape(): import("preact").JSX.Element;
    getShape(): import("preact").JSX.Element;
}
export declare const HtmlResize: {
    type: string;
    view: typeof HtmlResizeView;
    model: typeof HtmlResizeModel;
};
export default HtmlResize;
